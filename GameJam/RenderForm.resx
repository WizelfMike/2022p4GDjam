<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>